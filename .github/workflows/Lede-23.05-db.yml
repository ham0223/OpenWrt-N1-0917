name: Lede-23.05-db

on:
  repository_dispatch:
  workflow_dispatch:
  #schedule:
  #  - cron: 0 16 * * 4

env:
  REPO_URL: https://github.com/coolsnowwolf/lede
  REPO_BRANCH: master
  FEEDS_CONF: N1/Lede/LE-feeds.conf.default
  CONFIG_FILE: N1/Lede/2025-0916db.config
  DIY_P1_SH: N1/Lede/diy-part1.sh
  DIY_P2_SH: N1/Lede/diy-part2.sh
  FILES: N1/Lede/files
  TZ: Asia/Shanghai
  GITHUB_TOKEN: ${{ secrets.MY_TOKEN }}

jobs:
  build:
    runs-on: ubuntu-24.04

    steps:
    - name: 创建编译空间挂载点
      run: |
        sudo mkdir -p /workdir
        sudo chown $USER:$GROUPS /workdir

    - name: 最大化编译空间
      uses: easimon/maximize-build-space@master
      with:
        root-reserve-mb: 2048
        swap-size-mb: 1024
        build-mount-path: /workdir
        overprovision-lvm: 'true'
        remove-dotnet: 'true'
        remove-android: 'true'
        remove-haskell: 'true'
        remove-codeql: 'true'
        remove-docker-images: 'true'

    - name: 检查Actions
      uses: actions/checkout@v4

    - name: 初始化编译环境
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
        sudo -E apt-get -qq update -y
        sudo -E apt-get -qq full-upgrade -y
        sudo -E apt-get -qq install -y ack antlr3 asciidoc autoconf automake autopoint binutils bison build-essential \
        bzip2 ccache clang cmake cpio curl device-tree-compiler flex gawk gcc-multilib g++-multilib gettext \
        genisoimage git gperf haveged help2man intltool libc6-dev-i386 libelf-dev libfuse-dev libglib2.0-dev \
        libgmp3-dev libltdl-dev libmpc-dev libmpfr-dev libncurses5-dev libncursesw5-dev libpython3-dev \
        libreadline-dev libssl-dev libtool llvm lrzsz msmtp ninja-build p7zip p7zip-full patch pkgconf \
        python3 python3-pyelftools python3-setuptools qemu-utils rsync scons squashfs-tools subversion \
        swig texinfo uglifyjs upx-ucl unzip vim wget xmlto xxd zlib1g-dev libfuse-dev
        sudo -E apt-get -qq autoremove --purge
        sudo -E apt-get -qq clean
        sudo timedatectl set-timezone "$TZ"
        echo "硬盘详情："
        df -Th

    - name: 缓存 ccache
      uses: actions/cache@v4
      with:
        path: /workdir/.ccache
        key: ccache-${{ github.ref }}-${{ github.sha }}
        restore-keys: |
          ccache-${{ github.ref }}-
          ccache-

    - name: 缓存 dl
      uses: actions/cache@v4
      with:
        path: openwrt/dl
        key: dl-${{ hashFiles(env.CONFIG_FILE) }}
        restore-keys: |
          dl-

    - name: 克隆源码
      working-directory: /workdir
      run: |
        git clone --depth 1 --single-branch -b $REPO_BRANCH $REPO_URL openwrt
        ln -sf /workdir/openwrt $GITHUB_WORKSPACE/openwrt
        cd openwrt
        echo "useVersionInfo=$(git show -s --date=short --format="date: %cd<br/>commit: %s<br/>commit hash: %H")" >> $GITHUB_ENV
        echo "DATE=$(date "+%Y-%m-%d %H:%M:%S")" >> $GITHUB_ENV
        echo "tag_name=$(date +%Y%m%d)" >> $GITHUB_ENV

    - name: 加载DIY_P1
      run: |
        [ -e $FEEDS_CONF ] && mv $FEEDS_CONF openwrt/feeds.conf.default
        chmod +x $DIY_P1_SH
        cd openwrt
        $GITHUB_WORKSPACE/$DIY_P1_SH

    - name: 更新并安装 feeds
      run: |
        cd openwrt
        ./scripts/feeds update -a
        ./scripts/feeds install -a

    - name: 加载DIY_P2
      run: |
        [ -e $FILES ] && mv $FILES openwrt/files
        [ -e $CONFIG_FILE ] && mv $CONFIG_FILE openwrt/.config
        chmod +x $DIY_P2_SH
        cd openwrt
        $GITHUB_WORKSPACE/$DIY_P2_SH

    - name: 下载软件包
      run: |
        cd openwrt
        make defconfig
        make download -j$(nproc)
        find dl -size -1024c -exec rm -f {} \;

    - name: 编译固件
      run: |
        cd openwrt
        export CCACHE_DIR=/workdir/.ccache
        export CCACHE_COMPRESS=1
        export CCACHE_MAXSIZE=2G
        echo -e "$(nproc) thread compile"
        make -j$(nproc) || make -j$(nproc --ignore=1) || make -j1 V=s
        grep '^CONFIG_TARGET.*DEVICE.*=y' .config | sed -r 's/.*DEVICE_(.*)=y/\1/' > DEVICE_NAME
        [ -s DEVICE_NAME ] && echo "DEVICE_NAME=_$(cat DEVICE_NAME)" >> $GITHUB_ENV
        echo "FILE_DATE=_$(date +"%Y%m%d%H%M")" >> $GITHUB_ENV

    - name: 清理磁盘空间
      run: |
        mkdir openwrt-armvirt
        mkdir /workdir/upload
        cp openwrt/bin/targets/*/*/*.tar.gz /workdir/upload/
        mv openwrt/bin/targets/*/*/*.tar.gz openwrt-armvirt/
        rm -rf /workdir/openwrt/

    - name: 打包内核
      uses: unifreq/openwrt_packit@master
      env:
        WHOAMI: ham
        OPENWRT_ARMVIRT: openwrt-armvirt/*.tar.gz
        PACKAGE_SOC: s905d
        KERNEL_AUTO_LATEST: true
        KERNEL_REPO_URL: breakingbadboy/OpenWrt
        KERNEL_VERSION_NAME: 6.6.y

    - name: 整理文件
      run: mv /opt/openwrt_packit/output/* /workdir/upload/

    - name: 发布固件
      uses: ncipollo/release-action@v1
      with:
        name: OpenWrt-N1 → ${{ env.DATE }}
        tag: N1-23.05_${{ env.tag_name }}
        artifacts: /workdir/upload/*
        allowUpdates: true
        token: ${{ secrets.GITHUB_TOKEN }}
        body: |
              ---  使用说明 ---
              
              源码: ${{ env.REPO_URL }}
              分支: ${{ env.REPO_BRANCH }}
              
              网关：192.168.123.2
              用户名：root
              密码：password
              
              更新说明：
              2025-0418：本固件所含插件，请看主页图片。
              2025-0920：同步上游的更新。测试豆包代码。测试只编译一个固件：openwrt-amlogic-mesongx-phicomm_n1-rootfs.tar.gz


    - name: 删除自动发布的旧固件
      uses: dev-drprasad/delete-older-releases@master
      if: env.UPLOAD_RELEASE == 'true' && !cancelled()
      with:
        keep_latest: 7
        delete_tags: true
